import React, { useState } from "react";
import PageLayout from "@/components/PageLayout";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Label } from "@/components/ui/label";
import { MessageSquare, Mail, Phone, Bot, CheckCircle } from "lucide-react";
import { useToast } from "@/components/ui/use-toast";
import { supabase } from '@/integrations/supabase/client';

const Contact = () => {
  const { toast } = useToast();
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    subject: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [aiResponse, setAiResponse] = useState('');
  const [showResponse, setShowResponse] = useState(false);

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.name || !formData.email || !formData.message) {
      toast({
        title: "Missing Information",
        description: "Please fill in all required fields.",
        variant: "destructive"
      });
      return;
    }

    setIsSubmitting(true);
    setShowResponse(false);

    try {
      const { data, error } = await supabase.functions.invoke('ai-support', {
        body: formData
      });

      if (error) throw error;

      if (data.success) {
        setAiResponse(data.response);
        setShowResponse(true);
        toast({
          title: "Response Generated!",
          description: "Our AI has prepared a response to your inquiry."
        });
      } else {
        setAiResponse(data.fallbackResponse);
        setShowResponse(true);
        toast({
          title: "Message Received",
          description: "We'll respond to your inquiry within 24 hours.",
          variant: "destructive"
        });
      }

      // Reset form
      setFormData({ name: '', email: '', subject: '', message: '' });

    } catch (error) {
      console.error('Error submitting form:', error);
      toast({
        title: "Submission Error",
        description: "There was an issue submitting your message. Please try again.",
        variant: "destructive"
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <PageLayout title="Contact Us" description="We're here to help. Reach out with any questions, feedback, or support needs.">
      <div className="space-y-12">
        {/* AI Response Display */}
        {showResponse && (
          <Card className="border-2 border-blue-200 bg-gradient-to-r from-blue-50 to-indigo-50">
            <CardContent className="p-6">
              <div className="flex items-start gap-4">
                <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-full flex items-center justify-center shadow-lg">
                  <Bot className="h-6 w-6 text-white" />
                </div>
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-3">
                    <CheckCircle className="h-5 w-5 text-green-600" />
                    <h3 className="text-lg font-semibold text-slate-800">AI Support Response</h3>
                  </div>
                  <div className="bg-white/80 rounded-lg p-4 border border-blue-100">
                    <p className="text-slate-700 leading-relaxed whitespace-pre-wrap">{aiResponse}</p>
                  </div>
                  <p className="text-sm text-slate-600 mt-3">
                    This response was generated by our AI support system. If you need further assistance, our human support team will also review your message.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        <section className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <Card className="hover:shadow-md transition-shadow">
            <CardContent className="p-6 flex flex-col items-center text-center">
              <div className="w-12 h-12 bg-ruvo-100 rounded-full flex items-center justify-center text-ruvo-500 mb-4">
                <MessageSquare size={24} />
              </div>
              <h3 className="font-semibold mb-2">Chat Support</h3>
              <p className="text-gray-600 text-sm mb-4">
                Chat with our support team in real-time during business hours.
              </p>
              <Button variant="outline" className="w-full">
                Start Chat
              </Button>
              <div className="text-xs text-gray-500 mt-3">
                Available 9AM-6PM ET, Monday-Friday
              </div>
            </CardContent>
          </Card>
          
          <Card className="hover:shadow-md transition-shadow">
            <CardContent className="p-6 flex flex-col items-center text-center">
              <div className="w-12 h-12 bg-ruvo-100 rounded-full flex items-center justify-center text-ruvo-500 mb-4">
                <Mail size={24} />
              </div>
              <h3 className="font-semibold mb-2">Email Support</h3>
              <p className="text-gray-600 text-sm mb-4">
                Send us an email and we'll get back to you within 24 hours.
              </p>
              
              <div className="text-xs text-gray-500 mt-3">
                For general inquiries and support
              </div>
            </CardContent>
          </Card>
          
          <Card className="hover:shadow-md transition-shadow">
            <CardContent className="p-6 flex flex-col items-center text-center">
              <div className="w-12 h-12 bg-ruvo-100 rounded-full flex items-center justify-center text-ruvo-500 mb-4">
                <Phone size={24} />
              </div>
              <h3 className="font-semibold mb-2">Phone Support</h3>
              <p className="text-gray-600 text-sm mb-4">
                For premium users, get direct phone support from our team.
              </p>
              
              <div className="text-xs text-gray-500 mt-3">
                Premium users only, 9AM-5PM ET
              </div>
            </CardContent>
          </Card>
        </section>

        <section>
          <Card>
            <CardContent className="p-6">
              <div className="flex items-center gap-3 mb-6">
                <Bot className="h-6 w-6 text-blue-600" />
                <h2 className="text-2xl font-bold">Send Us a Message</h2>
                <span className="text-sm bg-blue-100 text-blue-700 px-2 py-1 rounded-full">AI-Powered</span>
              </div>
              <form onSubmit={handleSubmit} className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="name">Full Name</Label>
                    <Input 
                      id="name" 
                      placeholder="Your name" 
                      value={formData.name}
                      onChange={(e) => handleInputChange('name', e.target.value)}
                      required 
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="email">Email</Label>
                    <Input 
                      id="email" 
                      type="email" 
                      placeholder="Your email address" 
                      value={formData.email}
                      onChange={(e) => handleInputChange('email', e.target.value)}
                      required 
                    />
                  </div>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="subject">Subject</Label>
                  <Select onValueChange={(value) => handleInputChange('subject', value)}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select a subject" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="general">General Inquiry about Ruvo AI</SelectItem>
                      <SelectItem value="technical">Technical Support</SelectItem>
                      <SelectItem value="billing">Billing Question</SelectItem>
                      <SelectItem value="features">Feature Questions</SelectItem>
                      <SelectItem value="partnership">Partnership Opportunity</SelectItem>
                      <SelectItem value="feedback">Feedback & Suggestions</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="message">Message</Label>
                  <Textarea 
                    id="message" 
                    placeholder="Tell us about your question or how we can help you with Ruvo AI..." 
                    rows={5} 
                    value={formData.message}
                    onChange={(e) => handleInputChange('message', e.target.value)}
                    required 
                  />
                </div>
                
                <Button type="submit" className="w-full" disabled={isSubmitting}>
                  {isSubmitting ? (
                    <>
                      <Bot className="mr-2 h-4 w-4 animate-spin" />
                      AI is processing your message...
                    </>
                  ) : (
                    <>
                      <Bot className="mr-2 h-4 w-4" />
                      Send Message & Get AI Response
                    </>
                  )}
                </Button>
              </form>
            </CardContent>
          </Card>
        </section>

        <section>
          <h2 className="text-2xl font-bold mb-6">Frequently Asked Questions</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {[
              {
                q: "What is Ruvo AI and how does it work?",
                a: "Ruvo AI is an emotionally intelligent companion currently in MVP stage. It uses advanced AI to provide emotional support, mood tracking, and personalized conversations."
              },
              {
                q: "Is Ruvo AI available now?",
                a: "Ruvo AI is currently in beta/MVP phase. You can try our demo features and sign up for early access updates."
              },
              {
                q: "How does AI support work?",
                a: "Our AI support system understands Ruvo AI's features and can instantly answer questions about our product, pricing, and technical issues."
              },
              {
                q: "Is my data secure with Ruvo AI?",
                a: "Yes! Ruvo AI is designed with privacy first. All conversations are encrypted and we follow strict data protection practices."
              }
            ].map((faq, index) => (
              <Card key={index}>
                <CardContent className="p-4">
                  <h3 className="font-semibold mb-1">{faq.q}</h3>
                  <p className="text-sm text-gray-600">{faq.a}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
      </div>
    </PageLayout>
  );
};

export default Contact;
